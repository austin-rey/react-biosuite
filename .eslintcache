[{"C:\\Users\\austi\\Desktop\\biosuite\\src\\index.js":"1","C:\\Users\\austi\\Desktop\\biosuite\\src\\App.js":"2","C:\\Users\\austi\\Desktop\\biosuite\\src\\reportWebVitals.js":"3","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Navigation.js":"4","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Landing.js":"5","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Search.js":"6","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Species.js":"7","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Publisher.js":"8","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Occurrence.js":"9","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Dashboard.js":"10","C:\\Users\\austi\\Desktop\\biosuite\\src\\api\\gbif.js":"11","C:\\Users\\austi\\Desktop\\biosuite\\src\\hooks\\useFetch.js":"12"},{"size":266,"mtime":1609876553483,"results":"13","hashOfConfig":"14"},{"size":1852,"mtime":1609968889727,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1606495291126,"results":"16","hashOfConfig":"14"},{"size":1665,"mtime":1609969253402,"results":"17","hashOfConfig":"14"},{"size":239,"mtime":1609963167971,"results":"18","hashOfConfig":"14"},{"size":10357,"mtime":1610468788805,"results":"19","hashOfConfig":"14"},{"size":14677,"mtime":1610471483868,"results":"20","hashOfConfig":"14"},{"size":247,"mtime":1609963218080,"results":"21","hashOfConfig":"14"},{"size":251,"mtime":1609963197440,"results":"22","hashOfConfig":"14"},{"size":1380,"mtime":1610308511312,"results":"23","hashOfConfig":"14"},{"size":105,"mtime":1609966573981,"results":"24","hashOfConfig":"14"},{"size":841,"mtime":1610468788805,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1od3epr",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\austi\\Desktop\\biosuite\\src\\index.js",[],["58","59"],"C:\\Users\\austi\\Desktop\\biosuite\\src\\App.js",["60"],"import './App.css';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { Container,CssBaseline,createMuiTheme,ThemeProvider } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Navigation from './components/Navigation'\n\nimport Landing from './pages/Landing'\nimport Search from './pages/Search'\nimport Occurrence from './pages/Occurrence'\nimport Publisher from './pages/Publisher'\nimport Species from './pages/Species'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#7B8167\"\n    },\n    secondary: {\n      main: \"#ffa500\"\n    },\n    brown: {\n      light: \"#F0E9E1\",\n      main: \"#E6DFD6\",\n      dark: \"#6F6255\"\n    },\n    grey: {\n      light: \"#F5F6F8\"\n    }\n  }\n});\n\nconst useStyles = makeStyles({\n  root: {},\n  container: {\n    padding: '10px',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Navigation />\n        <Router>\n          <Route exact path='/'>\n            <Landing/>\n          </Route>\n          <Route exact path='/search/species/'>\n            <Search type=\"species\"/>\n          </Route>\n          <Route exact path='/search/occurrence/'>\n            <Search type=\"occurrence\"/>\n          </Route>\n          <Route exact path='/search/publisher/'>\n            <Search type=\"publisher\"/>\n          </Route>\n\n          <Route exact path='/species/:id'>\n            <Species/>\n          </Route>\n          <Route exact path='/occurrence/:id'>\n            <Occurrence/>\n          </Route>\n          <Route exact path='/publisher/:id'>\n            <Publisher/>\n          </Route>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\reportWebVitals.js",[],"C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Navigation.js",["61"],"import {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport { AppBar,Toolbar,Button,Typography,IconButton } from '@material-ui/core';\r\n\r\nimport {BrowserRouter as Router,Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    appBar: {\r\n      boxShadow: 'none'\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    navLink: {\r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n    }\r\n}));\r\n\r\nconst Navigation = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Router>\r\n                <AppBar position=\"static\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <span>o</span>\r\n                        </IconButton> */}\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                        BioSuite\r\n                        </Typography>\r\n                        <Button color=\"inherit\"><Link className={classes.navLink} to=\"/search/species/\">Species</Link></Button>\r\n                        <Button color=\"inherit\"><Link className={classes.navLink} to=\"/search/occurrence/\">Occurrences</Link></Button>\r\n                        <Button color=\"inherit\"><Link className={classes.navLink} to=\"/search/publisher/\">Publishers</Link></Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Router>\r\n      \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Landing.js",["62"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Landing = props => {\r\n    return (\r\n        <div>\r\n            <h1>Landing Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nLanding.propTypes = {\r\n\r\n}\r\n\r\nexport default Landing\r\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Search.js",["63","64","65","66","67","68","69"],"import React, {useState, useEffect} from 'react'\r\n\r\nimport {useFetch} from '../hooks/useFetch'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Grid,Button,Paper,TextField,FormGroup,FormControlLabel,Checkbox,Divider } from '@material-ui/core';\r\nimport {Pagination} from '@material-ui/lab'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport Dashboard from '../components/Dashboard'\r\n\r\n// Component css styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentHeader: {\r\n        backgroundColor: theme.palette.brown.light,\r\n        padding: '40px'\r\n    },\r\n    resultsHeader: {\r\n        padding: '10px 40px',\r\n    },\r\n    results: {\r\n        padding: '0px 40px',\r\n        flexGrow: 1,\r\n        height: '100%',\r\n    },\r\n    filterButton: {\r\n        backgroundColor: theme.palette.brown.dark,\r\n        color: '#fff'\r\n    },\r\n    card: {\r\n        marginBottom: '10px',\r\n        padding: '10px'\r\n    },\r\n    filterContainer: {\r\n        backgroundColor: '#fff',\r\n        border: '1px solid #F0E9E1',\r\n        borderRadius: '5px',\r\n        margin: '10px 0px',\r\n        padding: '10px'\r\n    },\r\n    textfield: {\r\n        width: '100%',\r\n        backgroundColor: '#fff',\r\n        border: '1px solid #F0E9E1',\r\n        borderRadius: '5px',\r\n\r\n    }\r\n}));\r\n\r\nlet PaginationControlled = ({totalPages,currentPage,pageChange}) => {\r\n    return (\r\n        <Pagination count={totalPages} page={currentPage} variant=\"outlined\" shape=\"rounded\" onChange={pageChange}  />\r\n    )\r\n}\r\n\r\nPaginationControlled.defaultProps = {\r\n    limit: 20,\r\n    offset: 20,\r\n}\r\n\r\n// Left side of the dashboard\r\nconst Sidebar = ({facets,onChange,selectedFilters}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\">\r\n            <Grid item>\r\n                <h3>Filters</h3>\r\n                <TextField className={classes.textfield} id=\"outlined-basic\" label=\"Name, description, class\" variant=\"outlined\" />\r\n            </Grid>\r\n            {facets.map((facet,facetIndex) => (\r\n                <Grid key={facetIndex} item className={classes.filterContainer}>\r\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item><h4>{facet.field.split('_').join(' ')}</h4></Grid>\r\n                        <Grid item><ArrowDropDownIcon/></Grid>\r\n                    </Grid>\r\n                    <Divider/>\r\n                    <FormGroup>\r\n                    {facet.counts.map((fieldOptions, fieldIndex) => (\r\n                       \r\n                        <FormControlLabel\r\n                            key={fieldIndex}\r\n                            control={<Checkbox checked={true}/>}\r\n                            label={fieldOptions.name.split('_').join(' ').toLowerCase()}\r\n                            value={facet.field}\r\n                        />\r\n                         /* <FormControlLabel\r\n                            key={fieldIndex}\r\n                            control={<Checkbox checked={(selectedFilters[facetIndex] === undefined)\r\n                                ? Object.values(selectedFilters[facetIndex])[1]?.includes(fieldOptions.name)\r\n                                : false} onChange={onChange} name={fieldOptions.name} />}\r\n                            label={fieldOptions.name.split('_').join(' ').toLowerCase()}\r\n                            value={facet.field}\r\n                        /> */\r\n                   \r\n                    ))}\r\n                    </FormGroup>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nSidebar.propTypes = {\r\n    facets: PropTypes.array,\r\n    onChange: PropTypes.number,\r\n    selectedFilters: PropTypes.array,\r\n}\r\n\r\n// Right side of the dashboard\r\nconst MainContent = ({count,results,offset,limit,pageChange,currentPage}) => {\r\n    const classes = useStyles();\r\n    console.log(offset)\r\n    let totalPages = Math.ceil(count/offset);\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\">\r\n            <Grid item className={classes.contentHeader}>\r\n                <h1 className={classes.pageTitle}>Species</h1>\r\n                <p>Searching for species with the following filters:</p>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2}>\r\n                    <Grid item><Button variant=\"contained\" className={classes.filterButton} disableElevation>Filter</Button></Grid>\r\n                    <Grid item><Button variant=\"contained\" className={classes.filterButton} disableElevation>Filter</Button></Grid>\r\n                    <Grid item><Button variant=\"contained\" className={classes.filterButton} disableElevation>Filter</Button></Grid>\r\n                    <Grid item><Button variant=\"contained\" className={classes.filterButton} disableElevation>Filter</Button></Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item className={classes.resultsHeader}>\r\n                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\r\n                    <Grid item><p>Results: {count}</p></Grid>\r\n                    <Grid item><Button variant=\"contained\" className={classes.filterButton} disableElevation>Sort</Button></Grid>\r\n                   \r\n                </Grid>\r\n            </Grid>\r\n            <Grid item className={classes.results}>\r\n                {results.map((result,i) => (\r\n                    <Paper key={i} elevation={0} className={classes.card}>\r\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\r\n                            <Grid item>\r\n                                <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                                    <Grid item>\r\n                                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n                                            <Grid item><h2>{result.scientificName}</h2></Grid>\r\n                                            <Grid item><p>class/class/class/class/class</p></Grid>\r\n                                            <Grid item><p>species</p></Grid>\r\n                                            <Grid item><p>accepted</p></Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <p>Occurrences: {result.numOccurrences}</p>\r\n                                    </Grid>\r\n                                    <Grid item><Button variant=\"contained\" className={classes.filterButton} disableElevation>view this species</Button></Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <img src=\"https://via.placeholder.com/250x150.png\" alt=\"\"/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                ))}\r\n                <Paper elevation={0} className={classes.card}>\r\n                 <PaginationControlled currentPage={currentPage} totalPages={totalPages} pageChange={pageChange} />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nMainContent.propTypes = {\r\n    count: PropTypes.number,\r\n    results: PropTypes.array,\r\n    offset: PropTypes.number,\r\n    limit: PropTypes.number,\r\n    pageChange: PropTypes.func\r\n}\r\n\r\nconst Search = ({type}) => {\r\n    const classes = useStyles();\r\n\r\n    const [endpoint, setEndpoint] = useState(`species/search?advanced=true&facet=rank&facet=dataset_key&facet=constituent_key&facet=highertaxon_key&facet=name_type&facet=status&facet=issue&facet=origin&facetMultiselect=true&issue.facetLimit=100&locale=en&name_type.facetLimit=100&rank.facetLimit=100&status.facetLimit=100&offset=60&limit=20`)\r\n\r\n    //${filters}/${pagination}\r\n    // &offset=60&limit=20\r\n    const { data, loading, error } = useFetch(\r\n        endpoint,\r\n        []\r\n    );\r\n\r\n    const [filters, setFilters] = useState([{\"ORIGIN\": [\"PROPARTE\"]}]);\r\n    let filterSelect = (e) => {\r\n        let group = e.target.value;\r\n        let selectedValue = e.target.name;\r\n\r\n        setFilters([...filters].map(filter => {\r\n            if(Object.keys(filter)[0] == group){\r\n                if(Object.values(filter)[0].length == 0){\r\n                    return {\r\n                        ...filter,\r\n                        [group]: [selectedValue]\r\n                    }\r\n                }\r\n                else if(Object.values(filter)[0].includes(selectedValue)){\r\n                    return {\r\n                        ...filter,\r\n                        [group]: Object.values(filter)[0].filter((value) => selectedValue !== value)\r\n                    }\r\n                } \r\n                else {\r\n                    return {\r\n                        ...filter,\r\n                        [group]: [...Object.values(filter)[0], selectedValue]\r\n                    }\r\n                }\r\n            }\r\n            return filter;\r\n        }))\r\n    }\r\n    \r\n    const [currentPage, setCurrentPage] = useState(data.offset/data.limit);\r\n    const pageChange = (event, value) => {\r\n        setCurrentPage(value);\r\n    } \r\n\r\n    console.log(currentPage)\r\n    useEffect(() => {\r\n        if(!loading) {\r\n            setCurrentPage(data.offset/data.limit)\r\n            // Initialize local state for managing filter changes (User selecting a filter option)\r\n            setFilters(data.facets.map((facet)=> {\r\n                return {[facet.field]: []}\r\n            }))\r\n          \r\n        }\r\n    }, [])\r\n\r\n    return ((loading) \r\n        ? <h1>Loading</h1>\r\n        : <Dashboard \r\n            sidebar={\r\n                <Sidebar facets={data.facets} onChange={filterSelect} selectedFilters={filters}/>\r\n            } \r\n            mainContent={\r\n                <MainContent count={data.count} results={data.results} offset={data.offset} limit={data.limit} pageChange={pageChange} currentPage={currentPage}/>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nSearch.propTypes = {\r\n    type: PropTypes.string\r\n}\r\n\r\nexport default Search\r\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Species.js",["70","71","72","73","74","75","76","77"],"C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Publisher.js",["78"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Publisher = props => {\r\n    return (\r\n        <div>\r\n            <h1>Publisher Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nPublisher.propTypes = {\r\n\r\n}\r\n\r\nexport default Publisher\r\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Occurrence.js",["79"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Occurrence = props => {\r\n    return (\r\n        <div>\r\n            <h1>Occurrence Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nOccurrence.propTypes = {\r\n\r\n}\r\n\r\nexport default Occurrence\r\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Dashboard.js",["80","81","82","83"],"import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Drawer,Typography,Divider,Container,CssBaseline} from '@material-ui/core';\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    backgroundColor: theme.palette.brown.main,\r\n    padding: theme.spacing(2),\r\n    position: 'relative',\r\n    whiteSpace: 'wrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  content: {\r\n    overflow: 'hideen',\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.grey.light\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst Dashboard = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        {props.sidebar}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n           {props.mainContent}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\api\\gbif.js",[],"C:\\Users\\austi\\Desktop\\biosuite\\src\\hooks\\useFetch.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":19},{"ruleId":"88","severity":1,"message":"92","line":3,"column":43,"nodeType":"90","messageId":"91","endLine":3,"endColumn":53},{"ruleId":"88","severity":1,"message":"93","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":17},{"ruleId":"88","severity":1,"message":"94","line":10,"column":8,"nodeType":"90","messageId":"91","endLine":10,"endColumn":23},{"ruleId":"88","severity":1,"message":"95","line":180,"column":11,"nodeType":"90","messageId":"91","endLine":180,"endColumn":18},{"ruleId":"88","severity":1,"message":"96","line":182,"column":22,"nodeType":"90","messageId":"91","endLine":182,"endColumn":33},{"ruleId":"88","severity":1,"message":"97","line":186,"column":28,"nodeType":"90","messageId":"91","endLine":186,"endColumn":33},{"ruleId":"98","severity":1,"message":"99","line":197,"column":39,"nodeType":"100","messageId":"101","endLine":197,"endColumn":41},{"ruleId":"98","severity":1,"message":"99","line":198,"column":52,"nodeType":"100","messageId":"101","endLine":198,"endColumn":54},{"ruleId":"102","severity":1,"message":"103","line":236,"column":8,"nodeType":"104","endLine":236,"endColumn":10,"suggestions":"105"},{"ruleId":"88","severity":1,"message":"93","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":17},{"ruleId":"88","severity":1,"message":"106","line":259,"column":15,"nodeType":"90","messageId":"91","endLine":259,"endColumn":28},{"ruleId":"88","severity":1,"message":"107","line":268,"column":15,"nodeType":"90","messageId":"91","endLine":268,"endColumn":36},{"ruleId":"88","severity":1,"message":"108","line":277,"column":15,"nodeType":"90","messageId":"91","endLine":277,"endColumn":38},{"ruleId":"88","severity":1,"message":"109","line":286,"column":15,"nodeType":"90","messageId":"91","endLine":286,"endColumn":42},{"ruleId":"88","severity":1,"message":"110","line":295,"column":15,"nodeType":"90","messageId":"91","endLine":295,"endColumn":35},{"ruleId":"88","severity":1,"message":"111","line":304,"column":15,"nodeType":"90","messageId":"91","endLine":304,"endColumn":35},{"ruleId":"88","severity":1,"message":"112","line":313,"column":15,"nodeType":"90","messageId":"91","endLine":313,"endColumn":33},{"ruleId":"88","severity":1,"message":"93","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":17},{"ruleId":"88","severity":1,"message":"93","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":17},{"ruleId":"88","severity":1,"message":"113","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":12},{"ruleId":"88","severity":1,"message":"114","line":6,"column":16,"nodeType":"90","messageId":"91","endLine":6,"endColumn":26},{"ruleId":"88","severity":1,"message":"115","line":6,"column":27,"nodeType":"90","messageId":"91","endLine":6,"endColumn":34},{"ruleId":"88","severity":1,"message":"89","line":6,"column":35,"nodeType":"90","messageId":"91","endLine":6,"endColumn":44},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'PropTypes' is defined but never used.","'ArrowDropUpIcon' is defined but never used.","'classes' is assigned a value but never used.","'setEndpoint' is assigned a value but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data.facets', 'data.limit', 'data.offset', and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["118"],"'metadataError' is assigned a value but never used.","'occurrenceImagesError' is assigned a value but never used.","'occurrenceDatasetsError' is assigned a value but never used.","'speciesVernacularNamesError' is assigned a value but never used.","'speciesSynonymsError' is assigned a value but never used.","'speciesChildrenError' is assigned a value but never used.","'speciesParentError' is assigned a value but never used.","'clsx' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [data.facets, data.limit, data.offset, loading]",{"range":"121","text":"122"},[9829,9831],"[data.facets, data.limit, data.offset, loading]"]