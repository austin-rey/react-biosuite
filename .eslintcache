[{"C:\\Users\\austi\\Desktop\\biosuite\\src\\index.js":"1","C:\\Users\\austi\\Desktop\\biosuite\\src\\App.js":"2","C:\\Users\\austi\\Desktop\\biosuite\\src\\reportWebVitals.js":"3","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Navigation.js":"4","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Landing.js":"5","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Search.js":"6","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Species.js":"7","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Publisher.js":"8","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Occurrence.js":"9","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Dashboard.js":"10","C:\\Users\\austi\\Desktop\\biosuite\\src\\api\\gbif.js":"11","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\MapboxGLMap.js":"12","C:\\Users\\austi\\Desktop\\biosuite\\src\\hooks\\useFetchSpecies.js":"13","C:\\Users\\austi\\Desktop\\biosuite\\src\\hooks\\useFetchSearch.js":"14","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Footer.js":"15","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Loading.js":"16","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Pagination.js":"17","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\ImageCard.js":"18","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\PageHeader.js":"19","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\NameCard.js":"20","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\SectionHeader.js":"21","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\ResultCard.js":"22","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\ClassificationCard.js":"23","C:\\Users\\austi\\Desktop\\biosuite\\src\\hooks\\useFetchOccurrence.js":"24","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\OccurrenceTable.js":"25","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\ImageTable.js":"26","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\OccurrenceEvent.js":"27"},{"size":266,"mtime":1609876553483,"results":"28","hashOfConfig":"29"},{"size":3574,"mtime":1611598132530,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1606495291126,"results":"31","hashOfConfig":"29"},{"size":1686,"mtime":1611594734052,"results":"32","hashOfConfig":"29"},{"size":3474,"mtime":1610648617484,"results":"33","hashOfConfig":"29"},{"size":10377,"mtime":1611599322070,"results":"34","hashOfConfig":"29"},{"size":16012,"mtime":1611680688669,"results":"35","hashOfConfig":"29"},{"size":247,"mtime":1609963218080,"results":"36","hashOfConfig":"29"},{"size":11595,"mtime":1611681529013,"results":"37","hashOfConfig":"29"},{"size":1389,"mtime":1611593762692,"results":"38","hashOfConfig":"29"},{"size":105,"mtime":1609966573981,"results":"39","hashOfConfig":"29"},{"size":1354,"mtime":1610579977329,"results":"40","hashOfConfig":"29"},{"size":2151,"mtime":1611162337437,"results":"41","hashOfConfig":"29"},{"size":1417,"mtime":1611250104561,"results":"42","hashOfConfig":"29"},{"size":547,"mtime":1610647938047,"results":"43","hashOfConfig":"29"},{"size":712,"mtime":1611080989892,"results":"44","hashOfConfig":"29"},{"size":355,"mtime":1611182672004,"results":"45","hashOfConfig":"29"},{"size":2940,"mtime":1611681119201,"results":"46","hashOfConfig":"29"},{"size":916,"mtime":1611598862953,"results":"47","hashOfConfig":"29"},{"size":2795,"mtime":1611680133917,"results":"48","hashOfConfig":"29"},{"size":704,"mtime":1611679547826,"results":"49","hashOfConfig":"29"},{"size":4571,"mtime":1611598024487,"results":"50","hashOfConfig":"29"},{"size":930,"mtime":1611682004506,"results":"51","hashOfConfig":"29"},{"size":1006,"mtime":1611254979962,"results":"52","hashOfConfig":"29"},{"size":1890,"mtime":1611681823395,"results":"53","hashOfConfig":"29"},{"size":3895,"mtime":1611681879932,"results":"54","hashOfConfig":"29"},{"size":2059,"mtime":1611339149973,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1od3epr",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"58"},"C:\\Users\\austi\\Desktop\\biosuite\\src\\index.js",[],["124","125"],"C:\\Users\\austi\\Desktop\\biosuite\\src\\App.js",["126"],"import './App.css';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { Container,CssBaseline,createMuiTheme,ThemeProvider } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Navigation from './components/Navigation'\nimport Footer from './components/Footer'\n\nimport Landing from './pages/Landing'\nimport Search from './pages/Search'\nimport Occurrence from './pages/Occurrence'\nimport Publisher from './pages/Publisher'\nimport Species from './pages/Species'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#5E6647\"\n    },\n    secondary: {\n      main: \"#6F6255\"\n    },\n    brown: {\n      light: \"#F0E9E1\",\n      main: \"#E6DFD6\",\n      dark: \"#6F6255\"\n    },\n    grey: {\n      light: \"#F5F6F8\"\n    },\n    green: {\n      light: \"#B5B7A6\",\n      main: \"#898E77\",\n      dark: \"#5E6647\"\n    },\n    yellow: {\n      main: \"#ffa500\"\n    }\n  },\n  typography: {\n    h1: {\n      fontFamily: 'Assistant, Alegreya Sans, sans-serif',\n      fontSize: '3rem',\n      margin: '1rem 0rem',\n      color: \"#51473D\"\n    },\n    h2: {\n      fontFamily: 'Mukta Vaani, Work Sans, Raleway',\n      letterSpacing: '0.5px',\n      fontSize: '2rem',\n      margin: '0.66rem 0rem',\n      color: \"#51473D\"\n\n    },\n    h3: {\n      fontFamily: 'Mukta Vaani, Raleway sans-serif',\n      letterSpacing:' 0.5px',\n      fontSize: '1.7rem',\n      margin: '0.56rem 0rem',\n      color: \"#51473D\"\n\n    },\n    h4: {\n      fontFamily: 'Mukta Vaani, Raleway, sans-serif',\n      letterSpacing: '0.5px',\n      fontSize: '1.3rem',\n      margin: '0.42rem 0rem',\n      color: \"#51473D\"\n\n    },\n    h5: {\n      fontFamily: 'Raleway, sans-serif',\n      letterSpacing: '0.5px',\n      fontSize: '1.1rem',\n      margin: '0.36rem 0rem',\n    },\n    h6: {\n      fontFamily: 'Work Sans, sans-serif',\n      fontSize: '1rem',\n      margin: '0.33rem 0rem',\n      color: \"#51473D\"\n\n    },\n    body1: {\n      fontFamily: 'Khula, Raleway, sans-serif',\n      fontSize: '1rem',\n      margin: '0.33rem 0rem',\n    },\n    body2: {\n      fontFamily: 'Khula, Work Sans, sans-serif',\n      fontSize: '.8rem',\n      margin: '0.26rem 0rem',\n    },\n    button: {\n      fontFamily: 'Mukta Vaani,Raleway, sans-serif',\n      // fontWeight: 'bold',\n      fontSize: '1rem',\n    }\n  },\n  border: {\n    brown: '1px solid #D8CFC6',\n    green: '1px solid #989C86',\n    light: '1px solid #E9ECEF',\n    dark: '1px solid #343A40'\n  }\n});\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100vh',\n  },\n  container: {\n    padding: '10px',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Navigation />\n        <Router>\n          <Route exact path='/'>\n            <Landing/>\n          </Route>\n          <Route exact path='/search/species/'>\n            <Search type=\"species\"/>\n          </Route>\n          <Route exact path='/search/occurrence/'>\n            <Search type=\"occurrence\"/>\n          </Route>\n          <Route exact path='/search/publisher/'>\n            <Search type=\"publisher\"/>\n          </Route>\n\n          <Route exact path='/species/:id'>\n            <Species/>\n          </Route>\n          <Route exact path='/occurrence/:id'>\n            <Occurrence/>\n          </Route>\n          <Route exact path='/publisher/:id'>\n            <Publisher/>\n          </Route>\n        </Router>\n        <Footer/>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\reportWebVitals.js",[],"C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Navigation.js",["127"],"import {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport { AppBar,Toolbar,Button,Typography,Container } from '@material-ui/core';\r\n\r\nimport {BrowserRouter as Router,Link} from \"react-router-dom\";\r\n\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n    appBar: {\r\n      boxShadow: 'none',\r\n      backgroundColor: theme.palette.green.dark,\r\n\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    navLink: {\r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n    },\r\n    icon: {\r\n      marginRight: '5px'\r\n    }\r\n}));\r\n\r\nconst Navigation = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Router>\r\n                <AppBar position=\"static\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <EcoIcon className={classes.icon}/>\r\n                        <Typography variant=\"h5\" className={classes.title}>\r\n                        BioSuite\r\n                        </Typography>\r\n                        <Link className={classes.navLink} to=\"/\"><Button color=\"inherit\">Home</Button></Link>\r\n                        <Link className={classes.navLink} to=\"/search/species/\"><Button color=\"inherit\">Species</Button></Link>\r\n                        <Link className={classes.navLink} to=\"/search/publisher/\"><Button color=\"inherit\">Publishers</Button></Link>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Router>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Landing.js",["128"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Grid, Button, Paper } from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.brown.light,\r\n    },\r\n    showcase: {\r\n       minHeight: '400px',\r\n       marginBottom: '10px'\r\n    },\r\n    headerBG: {\r\n        backgroundColor: theme.palette.brown.main,\r\n    },\r\n    contentHeader: {\r\n        padding: '20px 40px'\r\n    },\r\n    contentBody: {\r\n        padding: '20px 60px',\r\n        backgroundColor: theme.palette.brown.light,\r\n    }\r\n}));\r\n\r\nconst Landing = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n             <div className={classes.headerBG}>\r\n                <Container maxWidth=\"xl\" >\r\n                    <Grid container direction=\"column\" className={classes.contentHeader}>\r\n                        <h1>BIOSUITE</h1>\r\n                        <p>An application for <b>researchers, students and professionals</b> to explore published data on all living organisms across the world. Our data is sourced from GBIF (Global Biodiversity Information Facility), a data infrastructure whos purpose is to provide anyone, anywhere, open access to data about all types of life on Earth. Below you can see what kind of information is contained in this application and how it can be accessed.</p>\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n            <Container maxWidth=\"xl\">\r\n                <Grid container direction=\"column\" className={classes.contentBody}>\r\n                    <Grid item>\r\n                        <h2>Species Data</h2>\r\n                        <p>Biosuite provides a search tool to access recorded species and explore associated occurrences and datasets per each result. We categorize information along taxonomic, geographic, and thematic lines, or some combination of the three.</p>\r\n                        <Paper elevation={0} className={classes.showcase}></Paper>\r\n                        <Button variant=\"contained\" color=\"primary\" disableElevation>explore species</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <h2>Occurrence Data</h2>\r\n                        <p>Most of the data accessible on this website includes recorded occurrences, which can be general locality information or precise coordinates in which the species was observed.</p>\r\n                        <Paper elevation={0} className={classes.showcase}></Paper>\r\n                        <Button variant=\"contained\" color=\"primary\" disableElevation>explore occurrences</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <h2>Creditable Publishers</h2>\r\n                        <p>The data for this website is published by credible organizations who maintain datasets on species which follow imposed standards outlined by GBIF. We provide a robust searching tool that allows you to explore species recorded in each of these datasets.</p>\r\n                        <Paper elevation={0} className={classes.showcase}></Paper>\r\n                        <Button variant=\"contained\" color=\"primary\" disableElevation>explore publishers</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nLanding.propTypes = {\r\n\r\n}\r\n\r\nexport default Landing\r\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Search.js",["129","130","131","132","133","134","135","136"],"import React, {useState, useEffect} from 'react'\r\n\r\nimport { useFetchSearch } from '../hooks/useFetchSearch'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Grid,Paper,TextField,FormGroup,FormControlLabel,Checkbox,Divider,Typography } from '@material-ui/core';\r\n\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport Dashboard from '../components/Dashboard'\r\nimport Loading from '../components/Loading'\r\nimport ResultCard from '../components/ResultCard'\r\nimport PaginationControlled from '../components/Pagination'\r\nimport PageHeader from '../components/PageHeader'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    results: {\r\n        padding: '0px 40px',\r\n        flexGrow: 1,\r\n        height: '100%',\r\n        marginTop: '40px'\r\n    },\r\n    card: {\r\n        marginBottom: '10px',\r\n        padding: '10px',\r\n        border: theme.border.light\r\n\r\n    },\r\n    filterContainer: {\r\n        backgroundColor: '#fff',\r\n        border: '1px solid #F0E9E1',\r\n        borderRadius: '5px',\r\n        margin: '10px 0px',\r\n        padding: '10px',\r\n        border: theme.border.brown,\r\n\r\n    },\r\n    textfield: {\r\n        width: '100%',\r\n        borderRadius: '5px',\r\n        margin: '0px'\r\n    },\r\n    formLabel: {\r\n        display: 'flex',\r\n        fontFamily: 'Khula, Raleway, sans-serif',\r\n        fontSize: '1rem',\r\n    },\r\n    resultsCount: {\r\n        margin: '0px 0px 0px 30px',\r\n        display: 'flex',\r\n        justifySelf: 'center',\r\n        padding: '5px',\r\n        borderLeft: '2px solid #D2D2C6',\r\n        color: \"#4F5837\"\r\n    },\r\n    input: {\r\n        backgroundColor: \"#fff\"\r\n    },\r\n    headerBG: {\r\n        backgroundColor: theme.palette.brown.light,\r\n    },\r\n    mw1600: {\r\n        maxWidth: '1600px'\r\n    }\r\n}));\r\n\r\n// Left side of the dashboard\r\nconst Sidebar = ({facets,onChange,onSearchChange,selectedFilters,loading}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\">\r\n            <Grid item>\r\n                <Typography variant=\"h3\">Filters</Typography>\r\n                <TextField className={classes.textfield} onChange={onSearchChange} id=\"outlined-basic\" placeholder=\"Name, description, class\" label=\"Search\" variant=\"outlined\" />\r\n            </Grid>\r\n            {facets && facets.map((facet,facetIndex) => (\r\n                <Grid key={facetIndex} item className={classes.filterContainer}>\r\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item><Typography variant=\"h4\">{facet.field.split('_').join(' ')}</Typography></Grid>\r\n                        <Grid item><ArrowDropDownIcon/></Grid>\r\n                    </Grid>\r\n                    <Divider/>\r\n                    <FormGroup>\r\n                    {facet.counts.map((fieldOptions, fieldIndex) => (\r\n                        <>\r\n                            <FormControlLabel\r\n                                className={classes.formLabel}\r\n                                labelPlacement=\"end\"\r\n                                disabled={loading}\r\n                                key={fieldIndex}\r\n                                onChange={onChange}\r\n                                control={<Checkbox checked={Object.values(selectedFilters[facetIndex])[1]?.includes(fieldOptions.name)}/>}\r\n                                label={fieldOptions.name.split('_').join(' ').toLowerCase()}\r\n                                value={fieldOptions.name}\r\n                                name={facet.field}\r\n                            />\r\n                            <Typography variant=\"body2\" className={classes.resultsCount} >{fieldOptions.count} Results</Typography>\r\n                        </>\r\n                    ))}\r\n                    </FormGroup>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nSidebar.propTypes = {\r\n    facets: PropTypes.array,\r\n    onChange: PropTypes.number,\r\n    selectedFilters: PropTypes.array,\r\n}\r\n\r\n// Right side of the dashboard\r\nconst MainContent = ({count,results,pageChange,currentPage,totalPages,loading}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\">\r\n            <Grid item className={classes.headerBG}>\r\n                <div className={classes.mw1600}>\r\n                    <PageHeader heading=\"Species Search\"/>            \r\n                </div>\r\n            </Grid>\r\n            {!loading && \r\n            <div className={classes.mw1600}>\r\n                    <Grid item className={classes.results}>\r\n                        {results.map((result,i) => (\r\n                            <ResultCard result={result} key={i} loading={loading}/>\r\n                        ))}\r\n                    <Paper elevation={0} className={classes.card}>\r\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" className={classes.pagination}>\r\n                        <Grid item><PaginationControlled currentPage={currentPage} totalPages={totalPages} onChange={pageChange} /></Grid>\r\n                        <Grid item>{count} Results</Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n           </div>}\r\n           \r\n        </Grid>\r\n    )\r\n}\r\n\r\nMainContent.propTypes = {\r\n    count: PropTypes.number,\r\n    results: PropTypes.array,\r\n    offset: PropTypes.number,\r\n    limit: PropTypes.number,\r\n    pageChange: PropTypes.func\r\n}\r\n\r\nconst Search = () => {\r\n    const classes = useStyles();\r\n\r\n    const { \r\n        isLoading,\r\n        data,\r\n        error,\r\n        execute\r\n    } = useFetchSearch();\r\n   \r\n    // Component state and event handler for pagination ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    const [paginationOptions, setPaginationOptions] = useState({\r\n        page: 0,\r\n        limit: 10\r\n    });\r\n\r\n    const pageChange = (e,value) => {\r\n        setPaginationOptions((prevOptions) => ({\r\n            ...prevOptions,\r\n            page:value\r\n        }));\r\n        execute({\r\n            paginationOptions,\r\n            filters,\r\n            searchQuery,\r\n            page: value\r\n        })\r\n    }\r\n\r\n    // Processed \"filters\" state, array of param strings~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    const [filterStrings, setFilterStrings] = useState([]);  \r\n    \r\n    // Component state and event handler for filters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    const [filters, setFilters] = useState([\r\n        {\"ISSUE\": []},\r\n        {\"STATUS\": []},\r\n        {\"NAME_TYPE\": []},\r\n        {\"RANK\": []},\r\n    ]);  \r\n\r\n    const filterSelect = (e) => {\r\n        let group = e.target.name;\r\n        let selectedValue = e.target.value;\r\n\r\n        // Create an updated array of selected filters\r\n        let updatedFilters = filters.map((filter,i) => {\r\n            if(Object.keys(filter)[0] == group){\r\n                if(Object.values(filter)[0].length == 0){\r\n                    console.log('No items in this group are selected')\r\n                    return {\r\n                        ...filter,\r\n                        [group]: [selectedValue]\r\n                    }\r\n                }\r\n                else if(Object.values(filter)[0].includes(selectedValue)){\r\n                    console.log('This item has been selected')\r\n                    return {\r\n                        ...filter,\r\n                        [group]: Object.values(filter)[0].filter((value) => selectedValue !== value)\r\n                    }\r\n                } \r\n                else {\r\n                    console.log('Add this item to the group')\r\n                    return {\r\n                        ...filter,\r\n                        [group]: [...Object.values(filter)[0], selectedValue]\r\n                    }\r\n                }\r\n            }\r\n            return filter;\r\n        })\r\n\r\n        // Create an array of strings per each filter in updatedFilters ('&[GROUP]=[VALUE]') \r\n        let filterStrings = updatedFilters.map((filter) => {\r\n            if(Object.values(filter)[0].length != 0) {\r\n                return Object.values(filter)[0].map((option) => {\r\n                    return `&${Object.keys(filter)[0]}=${option}`\r\n                })\r\n        }}).flat().filter(item => item!=null)\r\n\r\n        setFilters(updatedFilters)\r\n        setFilterStrings(filterStrings)\r\n\r\n        try {\r\n            execute({\r\n                paginationOptions,\r\n                filterStrings: filterStrings.join(''),\r\n                searchQuery});\r\n        } catch (error) {}\r\n    }\r\n\r\n    // Component state and event handler for search component ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const searchChange = (e)=> {\r\n        e.persist();\r\n        setSearchQuery(e.target.value)\r\n        let searchQuery = e.target.value;\r\n        execute({\r\n            paginationOptions,\r\n            filterStrings,\r\n            searchQuery});\r\n    }\r\n\r\n    console.log(data)\r\n    // Initial fetching of data for the search page ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    useEffect(() => {\r\n        try {\r\n          execute({\r\n            paginationOptions,\r\n            filterStrings,\r\n            searchQuery});\r\n        } catch (error) {}\r\n      }, [execute]);\r\n\r\n      return (\r\n        <>\r\n            {!data && <Loading/>}\r\n            {data && <Dashboard \r\n                sidebar={\r\n                    <Sidebar \r\n                        loading={isLoading}\r\n                        facets={data.facets} \r\n                        onChange={filterSelect}\r\n                        onSearchChange={searchChange}\r\n                        selectedFilters={filters}\r\n                    />\r\n                } \r\n                mainContent={\r\n                    <MainContent \r\n                        loading={isLoading}\r\n                        count={data.count} \r\n                        results={data.results} \r\n                        pageChange={pageChange} \r\n                        currentPage={paginationOptions.page+1}\r\n                        totalPages={Math.ceil(data.count/paginationOptions.limit)}\r\n                    /> \r\n                }\r\n            />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Species.js",["137","138","139","140","141","142","143","144","145","146","147","148"],"C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Publisher.js",["149"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Publisher = props => {\r\n    return (\r\n        <div>\r\n            <h1>Publisher Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nPublisher.propTypes = {\r\n\r\n}\r\n\r\nexport default Publisher\r\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\pages\\Occurrence.js",["150","151","152","153","154","155","156","157","158"],"import React, {useEffect} from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Moment from 'react-moment';\r\n\r\nimport {BrowserRouter as Router,Link,useParams} from \"react-router-dom\";\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport { Grid,Paper,Typography,Container,Divider } from '@material-ui/core';\r\n\r\nimport {useFetchOccurrence} from '../hooks/useFetchOccurrence'\r\n\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport OccurrenceTable from '../components/OccurrenceTable'\r\nimport ImageTable from '../components/ImageTable'\r\nimport OccurrenceEvent from '../components/OccurrenceEvent'\r\nimport Loading from '../components/Loading'\r\nimport SectionHeader from '../components/SectionHeader'\r\nimport ImageCard from '../components/ImageCard'\r\nimport PageHeader from '../components/PageHeader'\r\nimport MapboxGLMap from '../components/MapboxGLMap'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    headerBG: {\r\n        backgroundColor: theme.palette.brown.light,\r\n    },//\r\n    headerContainer: {\r\n        padding: '20px 40px',\r\n        maxWidth: '1600px'\r\n    },//\r\n    headerButton: {\r\n        backgroundColor: theme.palette.brown.dark\r\n    },\r\n    viewMoreButton: {\r\n        backgroundColor: theme.palette.green.dark,\r\n        width: '100%'\r\n    },\r\n    resultsHeader: {\r\n        padding: '10px 40px',\r\n        borderBottom: '1px solid #efefef'\r\n    },\r\n    results: {\r\n        padding: '40px',\r\n        flexGrow: 1,\r\n        height: '100%',\r\n    },//\r\n    section: {\r\n        marginBottom: '20px'\r\n    },//\r\n    nameContainer: {\r\n        textAlign: 'center',\r\n        height: '100%'\r\n    },\r\n    card: {\r\n        width: 280,\r\n        boxShadow: 'none',\r\n        textAlign: 'center',\r\n        border: '1px solid #efefef',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        },\r\n    media: {\r\n        height: 200,\r\n    },\r\n    pagination: {\r\n        padding: '10px'\r\n    },\r\n    cardContainer: {\r\n        padding: '10px'\r\n    },\r\n    mapContainer: {\r\n        minWidth: '400px',\r\n        minHeight: '400px',\r\n        border: theme.border.light,\r\n        marginBottom: '10px'\r\n\r\n    },\r\n    sidebarContainer: {\r\n        backgroundColor: '#fff',\r\n        border: '1px solid #F0E9E1',\r\n        borderRadius: '5px',\r\n        margin: '10px 0px',\r\n        padding: '10px'\r\n    },//\r\n    link: {\r\n        color: \"#fff\",\r\n        textDecoration: 'none'\r\n    },\r\n    paper :{\r\n        backgroundColor: theme.palette.green.dark,\r\n        color: theme.palette.brown.light,\r\n        width: '100%',\r\n        height: 'calc(33% - 1px)',\r\n        marginBottom: '5px',\r\n        padding: '32px 15px',\r\n        borderRadius: '5px'\r\n    },\r\n    w33 : {\r\n        width: '33%'\r\n    },\r\n    w66 : {\r\n        width: '66%'\r\n    },    \r\n    w50 : {\r\n        width: '50%'\r\n    },\r\n    headerBG: {\r\n        backgroundColor: theme.palette.brown.light,\r\n    },\r\n    mw1600: {\r\n        maxWidth: '1600px',\r\n        margin: 'auto'\r\n    },\r\n    lightGreen: {\r\n        color: theme.palette.green.light,\r\n    }\r\n}));\r\n\r\n// Right side of the dashboard\r\nconst MainContent = ({data}) => {\r\n\r\n    const recordTableData = [\r\n        {\"Dataset Name\":data.datasetName},\r\n        {\"Institution Code\":data.institutionCode},\r\n        {\"Basis of Record\":data.basisOfRecord},\r\n        {\"Date Identified\":data.dateIdentified},\r\n        {\"Identification ID\":data.identificationID},\r\n        {\"Recorded By\":data.recordedBy},\r\n        {\"Identified By\":data.identifiedBy},\r\n    ]\r\n\r\n    const eventTableData = [\r\n        {\"Day\":data.day},\r\n        {\"Month\":data.month},\r\n        {\"Year\":data.year},\r\n        {\"Event Date\":data.eventDate},\r\n        {\"Event Time\":data.eventTime},\r\n        {\"Verbatim Event Date\":data.verbatimEventDate},\r\n    ]\r\n\r\n    const taxonTableData = [\r\n        {\"Kingdom\":data.kingdom},\r\n        {\"Phylum\":data.phylum},\r\n        {\"Class\":data.class},\r\n        {\"Order\":data.order},\r\n        {\"Family\":data.family},\r\n        {\"Genus\":data.genus},\r\n        {\"Specific Epithet\":data.specificEpithet},\r\n        {\"Infraspecific Epithet\":data.infraspecificEpithet},\r\n        {\"Scientific Name\":data.scientificName},\r\n        {\"Taxon ID\":data.taxonID},\r\n        {\"Rank\":data.taxonRank},\r\n        {\"Taxonomic Status\":data.taxonomicStatus},\r\n    ]\r\n\r\n    const locationTableData = [\r\n        {\"Coordinate Uncertainty In Meters\":data.coordinateUncertaintyInMeters},\r\n        {\"Country or Area\":data.country},\r\n        {\"Country Code\":data.countryCode},\r\n        {\"Decimal Latitude\":data.decimalLatitude},\r\n        {\"Decimal Longitude\":data.decimalLongitude},\r\n        {\"Geodetic Datum\":data.geodeticDatum},\r\n        {\"State Province\":data.stateProvince},\r\n        {\"Verbatim Locality\":data.verbatimLocality},\r\n    ];\r\n\r\n    const otherTableData = [\r\n        {\"Identifier\":data.identifier},\r\n        {\"Record License\":data.license},\r\n        {\"Modified\":data.modified},\r\n        {\"References\":data.references},\r\n        {\"Rights\":data.rights},\r\n        {\"Rights Holder\":data.rightsHolder},\r\n    ];\r\n\r\n    const classes = useStyles();\r\n\r\n    const HeadingBody = () => {\r\n        return (\r\n            <Typography variant=\"body1\">English Common Name: <b>{data.vernacularName}</b></Typography>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\">\r\n            <Grid item className={classes.headerBG}>\r\n                <div className={classes.mw1600}>\r\n                <PageHeader heading={data.scientificName} HeadingBody={HeadingBody}/> \r\n                </div>\r\n            </Grid>\r\n            <Grid item className={classes.results}>\r\n                <div className={classes.mw1600}>\r\n                    <Grid container direction=\"column\" wrap=\"nowrap\">\r\n                        <Grid item className={classes.section}>\r\n                            <SectionHeader heading=\"Overview\" subtext=\"General information for this record.\"/>\r\n                            <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"stretch\" spacing={2}>\r\n                                <Grid item className={classes.w33}>\r\n                                    <Grid container direction=\"column\" justify=\"space-evenly\" alignItems=\"stretch\">\r\n                                        <Grid className={classes.paper} item>\r\n                                            <Grid container direction=\"row\" alignItems=\"center\" spacing={2} >\r\n                                                <Grid item><AssignmentIcon/> </Grid>\r\n                                                <Grid item><Typography variant=\"h4\" className={classes.lightGreen}>{data.taxonRank}</Typography></Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid className={classes.paper} item>\r\n                                            <Grid container direction=\"row\" alignItems=\"center\" spacing={2} >\r\n                                                <Grid item><LocationOnIcon /></Grid>\r\n                                                <Grid item><Typography variant=\"h4\" className={classes.lightGreen}>{data.country}</Typography></Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid className={classes.paper} item>\r\n                                            <Grid container direction=\"row\" alignItems=\"center\" spacing={2} >\r\n                                                <Grid item><WatchLaterIcon/></Grid>\r\n                                                <Grid item><Typography variant=\"h4\" className={classes.lightGreen}><Moment format=\"MMM DD, YYYY\">{data.eventDate}</Moment></Typography></Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item className={classes.w66}>\r\n                                    <OccurrenceTable data={recordTableData}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item className={classes.section}>\r\n                            <SectionHeader heading=\"Location\" subtext=\"Location recorded by the publisher of this occurrence.\"/>\r\n                            <Paper elevation={0} className={classes.mapContainer}>\r\n                                <MapboxGLMap taxonKey={data.taxonKey} width={1024} height={400}/>\r\n                            </Paper>\r\n                            <OccurrenceTable data={locationTableData}/>\r\n                        </Grid>\r\n                        <Grid item className={classes.section}>\r\n                            <SectionHeader heading=\"Published Images\" subtext=\"Note: Click each image for a larger view.\"/>\r\n                            <Paper elevation={0}>\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container direction=\"row\" spacing={2} className={classes.cardContainer}>\r\n                                            {data.media?.map((image,i) => (\r\n                                                <Grid item key={i}>\r\n                                                    <ImageCard image={image.identifier} place={i+1}/>\r\n                                                </Grid>\r\n                                            ))}   \r\n                                        </Grid>\r\n                                        <Divider/>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                            <ImageTable data={data.media}/>\r\n                        </Grid>\r\n                        <Grid item className={classes.section}>\r\n                            <SectionHeader heading=\"Event\" subtext=\"Information regarding the time of the occurrence.\"/>\r\n                            <OccurrenceEvent day={data.day} month={data.month} year={data.year}/>\r\n                            <OccurrenceTable data={eventTableData}/>\r\n                        </Grid>                    \r\n                        <Grid item className={classes.section}>\r\n                            <SectionHeader heading=\"Taxon\" subtext=\"\"/>\r\n                            <OccurrenceTable data={taxonTableData}/>\r\n                        </Grid>\r\n                        <Grid item className={classes.section}>\r\n                            <SectionHeader heading=\"Other\" subtext=\"\"/>\r\n                            <OccurrenceTable data={otherTableData}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst Occurrence = () => {\r\n    let { id } = useParams();\r\n\r\n    const { \r\n        isLoading,\r\n        data,\r\n        error,\r\n        execute\r\n    } = useFetchOccurrence();\r\n\r\n    useEffect(() => {\r\n        try {\r\n            execute({id});\r\n        } catch (error) {}\r\n    }, [execute]);\r\n\r\n    console.log(data);\r\n    return (\r\n        <>\r\n            {data && <MainContent data={data}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Occurrence\r\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Dashboard.js",["159"],"import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Drawer,CssBaseline} from '@material-ui/core';\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    borderRight: theme.border.brown,\r\n    backgroundColor: theme.palette.brown.main,\r\n    padding: theme.spacing(2),\r\n    position: 'relative',\r\n    whiteSpace: 'wrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  content: {\r\n    overflow: 'hidden',\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.grey.light\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst Dashboard = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        {props.sidebar}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n           {props.mainContent}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\api\\gbif.js",[],"C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\MapboxGLMap.js",["160","161"],"import * as React from 'react';\r\nimport ReactMapboxGl, { Layer, Source,ZoomControl} from \"react-mapbox-gl\";\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nconst Map = ReactMapboxGl({\r\n    accessToken: process.env.REACT_APP_MAPBOX,\r\n    maxZoom : 1,\r\n    minZoom : 0\r\n  });\r\n\r\nconst MapboxGLMap = ({taxonKey,width,height}) => {\r\n\r\n  const RASTER_SOURCE_OPTIONS = {\r\n    \"type\": \"raster\",\r\n    \"tiles\": [\r\n        `https://api.gbif.org/v2/map/occurrence/density/0/0/0@2x.png?style=purpleYellow-noborder.poly&bin=hex&hexPerTile=70&taxonKey=${taxonKey}&srs=EPSG%3A4326`,\r\n        `https://api.gbif.org/v2/map/occurrence/density/0/1/0@2x.png?style=purpleYellow-noborder.poly&bin=hex&hexPerTile=70&taxonKey=${taxonKey}&srs=EPSG%3A4326`,\r\n    ],\r\n    \"tileSize\": 512\r\n  };\r\n    return (\r\n        <>\r\n        <Map\r\n        zoom={[0]}\r\n        // fitBounds={[[-47, 0], [-73, 45]]}\r\n        maxBounds={[[-79, 43], [-73, 45]]}\r\n        // center={[-47,90]}\r\n        style=\"mapbox://styles/mapbox/navigation-preview-night-v4\"\r\n        containerStyle={{\r\n          height: height,\r\n          width: width\r\n        }}\r\n      >\r\n          {/* <ZoomControl /> */}\r\n          <Source id=\"source_id\" tileJsonSource={RASTER_SOURCE_OPTIONS} />\r\n          <Layer type=\"raster\" id=\"layer_id\" sourceId=\"source_id\"/>\r\n      </Map>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default MapboxGLMap;","C:\\Users\\austi\\Desktop\\biosuite\\src\\hooks\\useFetchSpecies.js",["162"],"import { useState,useCallback } from 'react';\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport gbif from '../api/gbif'\r\n\r\nexport const fetchSpecies = async ({\r\n    id,\r\n    imagePaginationOptions,\r\n    occurrencePaginationOptions,\r\n    imagePage=0,\r\n    occurrencePage=0\r\n  }) => {\r\n\r\n  // Define offsets for pagination requests\r\n  const imageOffset = (imagePage*imagePaginationOptions.limit)    \r\n  const occurrenceOffset = (occurrencePage*occurrencePaginationOptions.limit)  \r\n\r\n  const resMetadata = await gbif.get(`species/${id}`)\r\n  const resOccurrenceImages = await gbif.get(`occurrence/search?media_type=stillImage&taxon_key=${id}&limit=${imagePaginationOptions.limit}&offset=${imageOffset}`)\r\n  const resSpeciesVernacularNames = await gbif.get(`species/${id}/vernacularNames`)\r\n  const resSpeciesSynonyms = await gbif.get(`/species/${id}/synonyms?limit=10`)\r\n  const resSpeciesChildren = await gbif.get(`/species/${id}/children?limit=100`)\r\n  const resSpeciesParent = await gbif.get(`/species/${id}/parents`)\r\n  const resOccurrences = await gbif.get(`occurrence/search?taxon_key=${id}&limit=${occurrencePaginationOptions.limit}&offset=${occurrenceOffset}`)\r\n\r\n  let data = {\r\n      \"metadata\": resMetadata.data,\r\n      \"occurrenceImages\": resOccurrenceImages.data,\r\n      \"speciesVernacularNames\": resSpeciesVernacularNames.data,\r\n      \"speciesSynonyms\": resSpeciesSynonyms.data,\r\n      \"speciesChildren\": resSpeciesChildren.data,\r\n      \"speciesParent\": resSpeciesParent.data,\r\n      \"occurrences\": resOccurrences.data\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nexport const useFetchSpecies = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState(null);\r\n\r\n  \r\n  const execute = async (options = {}) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const results = await fetchSpecies(options);\r\n      setData(results);\r\n      return results;\r\n    } catch (error) {\r\n      setError(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  console.log(data)\r\n  return {\r\n    isLoading,\r\n    data,\r\n    error,\r\n    execute: useCallback(execute, [])\r\n  };\r\n}","C:\\Users\\austi\\Desktop\\biosuite\\src\\hooks\\useFetchSearch.js",[],"C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Footer.js",["163","164","165","166"],"import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { Container, Grid, Button, Paper } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: '50px',\r\n        backgroundColor: theme.palette.green.main,\r\n        color: \"white\",\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Loading.js",[],"C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\Pagination.js",[],"C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\ImageCard.js",["167","168","169"],"C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\PageHeader.js",["170"],"import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport { Grid,Typography,Container } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    headerContainer: {\r\n        padding: '20px 40px',\r\n        maxWidth: '1600px'\r\n    }\r\n}));\r\n\r\nconst PageHeader = ({heading,HeadingBody}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"space-between\" alignItems=\"stretch\" className={classes.headerContainer}>\r\n            <Grid item>\r\n                <Typography variant=\"h1\">{heading}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                {HeadingBody && <HeadingBody/>}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nPageHeader.propTypes = {\r\n    heading: PropTypes.string,\r\n    HeadingBody: PropTypes.element,\r\n}\r\n\r\nexport default PageHeader\r\n","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\NameCard.js",[],"C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\SectionHeader.js",[],"C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\ResultCard.js",["171"],"import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {BrowserRouter as Router,Link} from \"react-router-dom\";\r\n\r\nimport { Grid,Button,Paper,Typography,Chip  } from '@material-ui/core';\r\n\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport MapboxGLMap from '../components/MapboxGLMap'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    viewSpeciesButton: {\r\n        backgroundColor: theme.palette.green.light,\r\n        color: '#fff',\r\n        height: '100%'\r\n    },\r\n    card: {\r\n        marginBottom: '10px',\r\n        padding: '10px',\r\n        border: theme.border.light\r\n    },\r\n    link: {\r\n        color: \"#fff\",\r\n        textDecoration: 'none',\r\n        height: '100%'\r\n    },\r\n    cardListText: {\r\n        borderLeft: '2px solid #D2D2C6',\r\n        margin: '0px 0px 10px 10px',\r\n        color: \"#4F5837\"\r\n    },\r\n    height100: {\r\n        height: '100%'\r\n    },\r\n    chip: {\r\n        borderRadius: '5px',\r\n        color: '#fff'\r\n    },\r\n    white: {\r\n        color: \"#fff\"\r\n    }\r\n}));\r\n\r\nconst ResultCard = ({result,key,loading}) => {\r\n    const classes = useStyles();\r\n\r\n    let commonName = \"\";\r\n\r\n    for(const vName of result.vernacularNames) {\r\n        if(vName.language === \"eng\") {\r\n            commonName = `\"${vName.vernacularName}\"`;\r\n            break;\r\n        }\r\n    }\r\n\r\n    console.log(commonName)\r\n    return (\r\n        <Paper key={key} elevation={0} className={classes.card}>\r\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"stretch\">\r\n                <Grid item>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item>\r\n                            <MapboxGLMap taxonKey={result.key} width={512} height={168}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container direction=\"column\" justify=\"space-evenly\" alignItems=\"flex-start\" className={classes.height100}>\r\n                                <Grid item>\r\n                                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"h3\">{result.scientificName}</Typography>\r\n                                            <Typography variant=\"body1\"><i>{commonName}</i></Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Grid container direction=\"row\" wrap=\"wrap\" spacing={2}>\r\n                                        {result.rank && <Grid item>\r\n                                            <Chip className={classes.chip} color=\"secondary\" label={<Typography variant=\"h6\" className={classes.white}>{result.rank.toUpperCase()}</Typography>} />\r\n                                        </Grid>}\r\n                                        {result.taxonomicStatus && <Grid item>\r\n                                            <Chip className={classes.chip} color=\"secondary\" label={<Typography variant=\"h6\" className={classes.white}>{result.taxonomicStatus.toUpperCase()}</Typography>}/>\r\n                                        </Grid>} \r\n                                        {result.kingdom && <Grid item>\r\n                                            <Chip className={classes.chip} color=\"secondary\" label={<Typography variant=\"h6\" className={classes.white}>{result.kingdom.toUpperCase()}</Typography>}/>\r\n                                        </Grid>}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link className={classes.link} to={`/species/${result.key}`}>\r\n                        <Button disabled={loading} variant=\"contained\" className={classes.viewSpeciesButton} disableElevation>\r\n                            <ArrowForwardIosIcon/>\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nResultCard.propTypes = {\r\n    result: PropTypes.object,\r\n    key: PropTypes.number,\r\n    loading: PropTypes.bool\r\n}\r\n\r\nexport default ResultCard\r\n\r\n\r\n// Scientific name\r\n// English Common Name\r\n// Tags - Status - Rank - Higher Taxon","C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\ClassificationCard.js",["172"],"C:\\Users\\austi\\Desktop\\biosuite\\src\\hooks\\useFetchOccurrence.js",[],"C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\OccurrenceTable.js",[],"C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\ImageTable.js",["173","174","175"],"C:\\Users\\austi\\Desktop\\biosuite\\src\\components\\OccurrenceEvent.js",["176"],"import React from 'react'\r\n\r\nimport { Paper,Grid,Typography } from '@material-ui/core';\r\n\r\nimport RoomIcon from '@material-ui/icons/Room';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: '10px'\r\n    },\r\n    paper: {\r\n        padding: '10px',\r\n        background: 'rgb(0,180,216)',\r\n        background: 'linear-gradient(90deg, rgba(0,180,216,1) 0%, rgba(82,183,136,1) 15%, rgba(252,191,73,1) 50%, rgba(242,149,89,1) 80%, rgba(0,212,255,1) 100%)'\r\n    },\r\n    markerContainer: {\r\n        position: 'relative',\r\n        height: '70px'\r\n    },\r\n    marker: {\r\n        position: 'absolute',\r\n        left: '20%',\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nconst daysInMonth = (month, year) => {\r\n    return new Date(year, month, 0).getDate();\r\n}\r\n\r\nconst OccurrenceEvent = ({day,month,year}) => {\r\n    const classes = useStyles();\r\n\r\n    let totalDays = day\r\n    let curMonth = 1;\r\n\r\n    while(curMonth < month) {\r\n        totalDays = totalDays + daysInMonth(curMonth, year)\r\n        curMonth++;\r\n    }\r\n    console.log(totalDays)\r\n\r\n    let leftProperty = (totalDays/365)*100;\r\n    console.log(leftProperty)\r\n    return (\r\n        <Paper elevation={0}>\r\n            <div className={classes.root}>\r\n                <div className={classes.markerContainer}>\r\n                    <div className={classes.marker} style={{left: `${leftProperty}%`}}>\r\n                        <Typography variant=\"h6\">{month}/{day}</Typography>\r\n                        <RoomIcon/>\r\n                    </div>\r\n                </div>\r\n                <Paper elevation={0} className={classes.paper}>\r\n                    <Grid container direction=\"row\" justify=\"space-between\">\r\n                        <Grid item><Typography variant=\"h3\">January</Typography></Grid>\r\n                        <Grid item><Typography variant=\"h3\">December</Typography></Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default OccurrenceEvent\r\n",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":5,"column":10,"nodeType":"183","messageId":"184","endLine":5,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":3,"column":43,"nodeType":"183","messageId":"184","endLine":3,"endColumn":52},{"ruleId":"181","severity":1,"message":"185","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"186","severity":1,"message":"187","line":38,"column":9,"nodeType":"188","messageId":"189","endLine":38,"endColumn":15},{"ruleId":"181","severity":1,"message":"190","line":155,"column":11,"nodeType":"183","messageId":"184","endLine":155,"endColumn":18},{"ruleId":"181","severity":1,"message":"191","line":160,"column":9,"nodeType":"183","messageId":"184","endLine":160,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":200,"column":39,"nodeType":"194","messageId":"189","endLine":200,"endColumn":41},{"ruleId":"192","severity":1,"message":"193","line":201,"column":52,"nodeType":"194","messageId":"189","endLine":201,"endColumn":54},{"ruleId":"195","severity":1,"message":"196","line":227,"column":57,"nodeType":"197","messageId":"198","endLine":227,"endColumn":59},{"ruleId":"192","severity":1,"message":"199","line":228,"column":48,"nodeType":"194","messageId":"189","endLine":228,"endColumn":50},{"ruleId":"200","severity":1,"message":"201","line":266,"column":10,"nodeType":"202","endLine":266,"endColumn":19,"suggestions":"203"},{"ruleId":"181","severity":1,"message":"185","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":17},{"ruleId":"181","severity":1,"message":"191","line":261,"column":9,"nodeType":"183","messageId":"184","endLine":261,"endColumn":14},{"ruleId":"181","severity":1,"message":"204","line":266,"column":12,"nodeType":"183","messageId":"184","endLine":266,"endColumn":30},{"ruleId":"181","severity":1,"message":"205","line":266,"column":32,"nodeType":"183","messageId":"184","endLine":266,"endColumn":53},{"ruleId":"181","severity":1,"message":"206","line":267,"column":11,"nodeType":"183","messageId":"184","endLine":267,"endColumn":29},{"ruleId":"181","severity":1,"message":"207","line":270,"column":12,"nodeType":"183","messageId":"184","endLine":270,"endColumn":32},{"ruleId":"181","severity":1,"message":"208","line":270,"column":34,"nodeType":"183","messageId":"184","endLine":270,"endColumn":57},{"ruleId":"181","severity":1,"message":"209","line":271,"column":11,"nodeType":"183","messageId":"184","endLine":271,"endColumn":31},{"ruleId":"181","severity":1,"message":"210","line":274,"column":12,"nodeType":"183","messageId":"184","endLine":274,"endColumn":30},{"ruleId":"181","severity":1,"message":"211","line":274,"column":32,"nodeType":"183","messageId":"184","endLine":274,"endColumn":53},{"ruleId":"181","severity":1,"message":"212","line":275,"column":11,"nodeType":"183","messageId":"184","endLine":275,"endColumn":29},{"ruleId":"200","severity":1,"message":"213","line":311,"column":12,"nodeType":"202","endLine":311,"endColumn":21,"suggestions":"214"},{"ruleId":"181","severity":1,"message":"185","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"185","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":17},{"ruleId":"181","severity":1,"message":"215","line":7,"column":26,"nodeType":"183","messageId":"184","endLine":7,"endColumn":32},{"ruleId":"181","severity":1,"message":"216","line":7,"column":33,"nodeType":"183","messageId":"184","endLine":7,"endColumn":37},{"ruleId":"181","severity":1,"message":"182","line":11,"column":32,"nodeType":"183","messageId":"184","endLine":11,"endColumn":41},{"ruleId":"181","severity":1,"message":"217","line":22,"column":8,"nodeType":"183","messageId":"184","endLine":22,"endColumn":15},{"ruleId":"186","severity":1,"message":"218","line":114,"column":5,"nodeType":"188","messageId":"189","endLine":114,"endColumn":13},{"ruleId":"181","severity":1,"message":"219","line":282,"column":9,"nodeType":"183","messageId":"184","endLine":282,"endColumn":18},{"ruleId":"181","severity":1,"message":"191","line":284,"column":9,"nodeType":"183","messageId":"184","endLine":284,"endColumn":14},{"ruleId":"200","severity":1,"message":"220","line":292,"column":8,"nodeType":"202","endLine":292,"endColumn":17,"suggestions":"221"},{"ruleId":"181","severity":1,"message":"222","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":12},{"ruleId":"181","severity":1,"message":"223","line":2,"column":39,"nodeType":"183","messageId":"184","endLine":2,"endColumn":50},{"ruleId":"224","severity":1,"message":"225","line":28,"column":9,"nodeType":"226","endLine":28,"endColumn":67},{"ruleId":"181","severity":1,"message":"185","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":17},{"ruleId":"181","severity":1,"message":"182","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":19},{"ruleId":"181","severity":1,"message":"227","line":3,"column":21,"nodeType":"183","messageId":"184","endLine":3,"endColumn":25},{"ruleId":"181","severity":1,"message":"228","line":3,"column":27,"nodeType":"183","messageId":"184","endLine":3,"endColumn":33},{"ruleId":"181","severity":1,"message":"229","line":3,"column":35,"nodeType":"183","messageId":"184","endLine":3,"endColumn":40},{"ruleId":"181","severity":1,"message":"230","line":57,"column":12,"nodeType":"183","messageId":"184","endLine":57,"endColumn":16},{"ruleId":"181","severity":1,"message":"231","line":59,"column":11,"nodeType":"183","messageId":"184","endLine":59,"endColumn":22},{"ruleId":"232","severity":1,"message":"233","line":65,"column":17,"nodeType":"234","endLine":65,"endColumn":49},{"ruleId":"181","severity":1,"message":"182","line":7,"column":26,"nodeType":"183","messageId":"184","endLine":7,"endColumn":35},{"ruleId":"181","severity":1,"message":"215","line":5,"column":26,"nodeType":"183","messageId":"184","endLine":5,"endColumn":32},{"ruleId":"181","severity":1,"message":"235","line":9,"column":7,"nodeType":"183","messageId":"184","endLine":9,"endColumn":16},{"ruleId":"232","severity":1,"message":"233","line":60,"column":98,"nodeType":"234","endLine":60,"endColumn":136},{"ruleId":"232","severity":1,"message":"233","line":61,"column":98,"nodeType":"234","endLine":61,"endColumn":139},{"ruleId":"232","severity":1,"message":"233","line":64,"column":98,"nodeType":"234","endLine":64,"endColumn":139},{"ruleId":"186","severity":1,"message":"236","line":16,"column":9,"nodeType":"188","messageId":"189","endLine":16,"endColumn":19},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","unexpected","'classes' is assigned a value but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterStrings', 'paginationOptions', and 'searchQuery'. Either include them or remove the dependency array.","ArrayExpression",["239"],"'childrenPagination' is assigned a value but never used.","'setChildrenPagination' is assigned a value but never used.","'childrenPageChange' is assigned a value but never used.","'vernacularPagination' is assigned a value but never used.","'setVernacularPagination' is assigned a value but never used.","'vernacularPageChange' is assigned a value but never used.","'synonymsPagination' is assigned a value but never used.","'setSynonymsPagination' is assigned a value but never used.","'synonymsPageChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'imagePaginationOptions', and 'occurrencePaginationOptions'. Either include them or remove the dependency array.",["240"],"'Router' is defined but never used.","'Link' is defined but never used.","'Loading' is defined but never used.","Duplicate key 'headerBG'.","'isLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["241"],"'clsx' is defined but never used.","'ZoomControl' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","'Grid' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useStyles' is assigned a value but never used.","Duplicate key 'background'.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [execute, filterStrings, paginationOptions, searchQuery]",{"range":"248","text":"249"},"Update the dependencies array to be: [execute, id, imagePaginationOptions, occurrencePaginationOptions]",{"range":"250","text":"251"},"Update the dependencies array to be: [execute, id]",{"range":"252","text":"253"},[9390,9399],"[execute, filterStrings, paginationOptions, searchQuery]",[15186,15195],"[execute, id, imagePaginationOptions, occurrencePaginationOptions]",[11428,11437],"[execute, id]"]